plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'io.gitlab.arturbosch.detekt'
    id 'kotlin-parcelize'
}

apply from: "../ktlint.gradle"

android {
    namespace 'com.example.jetpackcompose'
    compileSdk 33

    defaultConfig {
        applicationId "com.example.jetpackcompose"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.3.2'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    signingConfigs {
        prod {
            storeFile rootProject.file("keystore/sample-prod")
            storePassword "123456"
            keyAlias "key0"
            keyPassword "123456"
        }
    }
    buildTypes {
        release {
            signingConfigs.prod
            minifyEnabled true
            shrinkResources true
            signingConfig signingConfigs.prod
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

ext {

    // Network
    logging_interceptor_version = '4.9.3'
    okhttp_version = '4.9.3'
    retrofit_version = '2.9.0'

    room_version = '2.4.2'
    hilt_version = '2.42'
}

dependencies {

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.4.1'
    implementation 'androidx.activity:activity-compose:1.5.1'
    implementation 'androidx.appcompat:appcompat:1.6.1'

    implementation platform('androidx.compose:compose-bom:2022.10.00')
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3'

    // Splash screen
    implementation "androidx.core:core-splashscreen:1.0.1"

    // DI
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"

    // Network
    implementation("com.squareup.retrofit2:retrofit:$retrofit_version")
    implementation("com.squareup.retrofit2:converter-gson:$retrofit_version")
    implementation("com.squareup.retrofit2:adapter-rxjava2:$retrofit_version")
    implementation "com.squareup.okhttp3:okhttp:4.10.0"
    implementation "com.squareup.okhttp3:logging-interceptor:$logging_interceptor_version"

    // Room Database
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    // To use Kotlin annotation processing tool (kapt)
    kapt "androidx.room:room-compiler:$room_version"

    // Required -- JUnit 4 framework
    testImplementation 'junit:junit:4.13.2'
    // Optional -- Robolectric environment
    testImplementation "androidx.test:core:1.5.0"
    // Optional -- Mockito framework
    testImplementation "org.mockito:mockito-core:5.1.1"
    // Optional -- mockito-kotlin
    testImplementation "org.mockito.kotlin:mockito-kotlin:4.1.0"
    // Optional -- Mockk framework
    testImplementation "io.mockk:mockk:1.13.4"
    testImplementation "androidx.arch.core:core-testing:2.2.0"
    testImplementation 'app.cash.turbine:turbine:0.12.1'
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.0"

    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation platform('androidx.compose:compose-bom:2022.10.00')
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'
}

// ./gradlew detekt
detekt {
    parallel = false
    config = files("detekt-config.yml")
    buildUponDefaultConfig = false
    disableDefaultRuleSets = false

    debug = false
    ignoreFailures = false

    ignoredBuildTypes = ["release"]
    config = files("../detekt-config.yml")
}

tasks.named("detekt").configure {
    reports {
        // Enable/Disable XML report (default: true)
        xml.required.set(true)
        xml.outputLocation.set(file("build/reports/detekt.xml"))
        // Enable/Disable HTML report (default: true)
        html.required.set(true)
        html.outputLocation.set(file("build/reports/detekt.html"))
    }
}
